{"version":3,"sources":["assets/images sync /^/.//.*$","assets/images/bellatrix.png","assets/images/draco.png","assets/images/dumbledore.png","assets/images/ginny.png","assets/images/hagrid.png","assets/images/harry.png","assets/images/harrybackground.png","assets/images/hermione.png","assets/images/hp.png","assets/images/luna.png","assets/images/mcgonagall.png","assets/images/myrtle.png","assets/images/neville.png","assets/images/remus.png","assets/images/ron.png","assets/images/sirius.png","assets/images/snape.png","assets/images/trelawney.png","components/Card/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","root","maxWidth","media","height","ImgMediaCard","database","handleSubmit","classes","Grid","item","xs","container","spacing","card","Card","className","CardMedia","component","alt","image","require","img","onClick","UIContainer","props","Fragment","CssBaseline","Container","children","App","state","db","highScore","score","message","newDb","clicked","setState","console","log","sort","a","b","Math","random","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"k7BAAA,IAAIA,EAAM,CACT,kBAAmB,GACnB,cAAe,GACf,mBAAoB,GACpB,cAAe,GACf,eAAgB,GAChB,cAAe,GACf,wBAAyB,GACzB,iBAAkB,GAClB,WAAY,GACZ,aAAc,GACd,mBAAoB,GACpB,eAAgB,GAChB,gBAAiB,GACjB,cAAe,GACf,YAAa,GACb,eAAgB,GAChB,cAAe,GACf,kBAAmB,IAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBCvCpBU,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,iJCQrCC,G,MAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,MAAO,CACHC,OAAQ,QAID,SAASC,EAAT,GAAmD,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aACvCC,EAAUT,IAEhB,OACI,kBAACU,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,WAAS,EAACC,QAAS,GAG9BP,EAAStB,KAAI,SAAA8B,GAET,OACI,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGE,QAAS,GAEvB,kBAACE,EAAA,EAAD,CAAMC,UAAWR,EAAQP,MAErB,kBAACgB,EAAA,EAAD,CAAWD,UAAWR,EAAQL,MAC1Be,UAAU,MACVC,IAAKL,EAAKK,IACVC,MAAOC,MAAQ,KAAyBP,EAAKQ,KAAMC,QAAS,WACxDhB,EAAaO,EAAK3B,a,4BC/B3C,SAASqC,EAAYC,GAClC,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAW1B,SAAS,MACfuB,EAAMI,W,ICsFFC,E,4MAzFXC,MAAQ,CACJC,KACAC,UAAW,EACXC,MAAO,EACPC,QAAS,+B,EAIb5B,aAAe,SAACpB,GAGb,IAAIiD,EAAQ,GAGc,IAArB,EAAKL,MAAMG,QACXE,EAAQ,EAAKL,MAAMC,GAAGhD,KAAI,SAAA8B,GAEtB,OADAA,EAAKuB,SAAU,EACRvB,KAEX,EAAKwB,SAAS,CAAEN,GAAII,IACpBG,QAAQC,IAAI,KAAM,EAAKT,MAAMC,MAKhCI,EAAQ,EAAKL,MAAMC,GAAGhD,KAAI,SAAA8B,GA8BvB,OA5BI3B,IAAO2B,EAAK3B,KAEP2B,EAAKuB,QAgBN,EAAKC,SAAS,CACVJ,MAAO,EACPC,QAAS,mCAjBb,EAAKG,SAAS,CACVJ,MAAO,EAAKH,MAAMG,MAAQ,EAC1BC,QAAS,2BAGT,EAAKJ,MAAMG,OAAS,EAAKH,MAAME,WAC/B,EAAKK,SAAS,CACVL,UAAW,EAAKF,MAAME,UAAY,IAG1CnB,EAAKuB,SAAU,IAehBvB,MAIL2B,MAAK,SAACC,EAAEC,GAEV,OAAOC,KAAKC,SAAW,MAG3BN,QAAQC,IAAI,QAASJ,GAErB,EAAKE,SAAS,CAAEN,GAAII,IACpBG,QAAQC,IAAI,KAAM,EAAKT,MAAMC,K,uDAM7B,OACI,kBAACR,EAAD,KACI,wDACA,wBAAIR,UAAkC,kCAAvB8B,KAAKf,MAAMI,QAA8C,qBAAuB,IAAKW,KAAKf,MAAMI,SAC/G,4BAAI,wCAAcW,KAAKf,MAAMG,OAAa,gDAAsBY,KAAKf,MAAME,YAC1EM,QAAQC,IAAI,QAASM,KAAKf,MAAMG,MAAO,cAAeY,KAAKf,MAAME,WAClE,yBAAKjB,UAAkC,kCAAvB8B,KAAKf,MAAMI,QAA8C,iBAAmB,IAC5F,kBAAC,EAAD,CAAM7B,SAAUwC,KAAKf,MAAMC,GAAIzB,aAAcuC,KAAKvC,qB,GAjFhDwC,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAM9B,e","file":"static/js/main.9302411d.chunk.js","sourcesContent":["var map = {\n\t\"./bellatrix.png\": 36,\n\t\"./draco.png\": 37,\n\t\"./dumbledore.png\": 38,\n\t\"./ginny.png\": 39,\n\t\"./hagrid.png\": 40,\n\t\"./harry.png\": 41,\n\t\"./harrybackground.png\": 42,\n\t\"./hermione.png\": 43,\n\t\"./hp.png\": 44,\n\t\"./luna.png\": 45,\n\t\"./mcgonagall.png\": 46,\n\t\"./myrtle.png\": 47,\n\t\"./neville.png\": 48,\n\t\"./remus.png\": 49,\n\t\"./ron.png\": 50,\n\t\"./sirius.png\": 51,\n\t\"./snape.png\": 52,\n\t\"./trelawney.png\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35;","module.exports = __webpack_public_path__ + \"static/media/bellatrix.94bcf6d5.png\";","module.exports = __webpack_public_path__ + \"static/media/draco.09b21bb5.png\";","module.exports = __webpack_public_path__ + \"static/media/dumbledore.91d1f003.png\";","module.exports = __webpack_public_path__ + \"static/media/ginny.782e0727.png\";","module.exports = __webpack_public_path__ + \"static/media/hagrid.f54ec2b0.png\";","module.exports = __webpack_public_path__ + \"static/media/harry.cd7d9d8e.png\";","module.exports = __webpack_public_path__ + \"static/media/harrybackground.569627c8.png\";","module.exports = __webpack_public_path__ + \"static/media/hermione.54de3254.png\";","module.exports = __webpack_public_path__ + \"static/media/hp.c6fee9e1.png\";","module.exports = __webpack_public_path__ + \"static/media/luna.83e2109e.png\";","module.exports = __webpack_public_path__ + \"static/media/mcgonagall.f2b49eac.png\";","module.exports = __webpack_public_path__ + \"static/media/myrtle.b7439d76.png\";","module.exports = __webpack_public_path__ + \"static/media/neville.85cbee62.png\";","module.exports = __webpack_public_path__ + \"static/media/remus.85948a20.png\";","module.exports = __webpack_public_path__ + \"static/media/ron.9aadcfe3.png\";","module.exports = __webpack_public_path__ + \"static/media/sirius.fe057c2d.png\";","module.exports = __webpack_public_path__ + \"static/media/snape.dc6cc606.png\";","module.exports = __webpack_public_path__ + \"static/media/trelawney.b0bf6909.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport \"./style.css\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 175,\n    },\n    media: {\n        height: 200,\n    },\n});\n\nexport default function ImgMediaCard({ database, handleSubmit }) {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} container spacing={3}>\n\n            {\n                database.map(card => {\n\n                    return (\n                        <Grid item xs={3} spacing={3}>\n\n                            <Card className={classes.root} >\n\n                                <CardMedia className={classes.media}\n                                    component=\"img\"\n                                    alt={card.alt}\n                                    image={require(\"../../assets/images/\" + card.img)} onClick={() => {\n                                        handleSubmit(card.id)\n                                    }\n\n                                    } />\n\n                            </Card>\n                        </Grid>\n                    )\n                })\n\n            }\n\n\n        </Grid>\n    );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nexport default function UIContainer(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n          {props.children}\n      </Container>\n    </React.Fragment>\n  );\n}","import React, { Component } from \"react\"\n\nimport Card from \"./components/Card\"\nimport db from './db.json'\nimport UIContainer from './components/Container'\nclass App extends Component {\n    state = {\n        db,\n        highScore: 0,\n        score: 0,\n        message: \"Click on an image to begin!\"\n    }\n\n\n    handleSubmit = (id) => {\n\n\n       let newDb = []      \n\n\n        if (this.state.score === 0) {\n            newDb = this.state.db.map(card => {\n                card.clicked = false\n                return card\n            })\n            this.setState({ db: newDb })\n            console.log(\"db\", this.state.db)\n    \n        }\n       \n             \n         newDb = this.state.db.map(card  => {\n\n            if (id === card.id) {\n\n                if (!card.clicked) {\n                    this.setState({\n                        score: this.state.score + 1,\n                        message: \"You guessed correctly!\"\n                    })\n\n                    if (this.state.score >= this.state.highScore) {\n                        this.setState({\n                            highScore: this.state.highScore + 1\n                        })\n                    }\n                    card.clicked = true\n\n\n                }\n                else {\n                    this.setState({\n                        score: 0,\n                        message: \"You already guessed that one!\"\n                    })\n                }\n\n\n            }\n\n\n            return card\n\n        })\n        \n        newDb.sort((a,b) => {\n              \n            return Math.random() - 0.5\n        })\n\n        console.log(\"newDb\", newDb)\n\n        this.setState({ db: newDb })\n        console.log(\"db\", this.state.db)\n\n\n\n    }\n    render() {\n        return (\n            <UIContainer>\n                <h1>Harry Potter Clicky Game</h1>  \n                <h3 className={this.state.message === \"You already guessed that one!\" ? \"animated heartBeat\" : \"\"}>{this.state.message}</h3>\n                <h2><span>Score: {this.state.score}</span><span> | High Score: {this.state.highScore}</span></h2>\n                {console.log(\"score\", this.state.score, \"high score \", this.state.highScore)}\n                <div className={this.state.message === \"You already guessed that one!\" ? \"animated shake\" : \"\"}>\n                <Card database={this.state.db} handleSubmit={this.handleSubmit} />\n                </div>\n            </UIContainer>\n        )\n    }\n\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}